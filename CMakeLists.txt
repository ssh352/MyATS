#CMake file for CppProjectsV2
#Author:jianwei cheng
#Create:20160616
#SET(CMAKE_C_COMPILER "/usr/local/bin/gcc")
#SET(CMAKE_CXX_COMPILER "/usr/local/bin/g++")
include(CheckCXXCompilerFlag)

cmake_minimum_required(VERSION 2.8)

#定义工程名称
PROJECT(CppProjectsV2) 

MESSAGE(STATUS "Project Directory: ${PROJECT_SOURCE_DIR}")

SET(CMAKE_BUILE_TYPE DEBUG) 
add_definitions(-DLinux)
#add_definitions(-DBOOST_LOG_DYN_LINK)
#add_definitions(-DBOOST_THREAD_DYN_LINK)
#指定编译器 
SET(CMAKE_CXX_FLAGS "-g -march=core2 -Wall -Wno-unused -O2 -lpthread -lm -lrt -static-libgcc")

CHECK_CXX_COMPILER_FLAG("-std=c++11" COMPILER_SUPPORTS_CXX11)
CHECK_CXX_COMPILER_FLAG("-std=c++0x" COMPILER_SUPPORTS_CXX0X)
if(COMPILER_SUPPORTS_CXX11)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
elseif(COMPILER_SUPPORTS_CXX0X)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++0x")
else()
    message(STATUS "The compiler ${CMAKE_CXX_COMPILER} has no C++11
support. Please use a different C++ compiler.")
endif()

SET(FEED_FS "true" ON)
SET(FEED_CTP "true" ON)
SET(FEED_LTS "true" ON)
SET(FEED_LTS2 "true" ON)
#SET(FEED_XS "true" ON)
SET(FEED_XS2 "true" ON)
SET(FEED_LTSUDP "true" ON)
SET(FEED_LTSCFFEXUDP "true" ON)
SET(FEED_TDF "true" ON)
SET(FEED_SL "true" ON)
SET(FEED_SL2 "true" ON)
SET(FEED_ES "true" ON)
#SET(FEED_XSL2 "true" ON)
SET(FEED_FEMAS "true" ON)
SET(FEED_IB "true" ON)
SET(FEED_ZD "true" ON)

SET(CON_LTS "true" ON)
SET(CON_CTP "true" ON)
#SET(CON_XS "true" ON)
#SET(CON_XS2 "true" ON)
SET(CON_X1 "true" ON)
SET(CON_FS "true" ON)
SET(CON_SL "true" ON)
SET(CON_ES "true" ON)
SET(CON_FEMAS "true" ON)
SET(CON_IB "true" ON)
SET(CON_ZD "true" ON)




#添加目录
ADD_SUBDIRECTORY(terra/common)
ADD_SUBDIRECTORY(terra/zmq404)
ADD_SUBDIRECTORY(terra/nanomsg-1.0.0)
ADD_SUBDIRECTORY(terra/feedcommon)
ADD_SUBDIRECTORY(terra/instruments)
ADD_SUBDIRECTORY(terra/marketaccess)
ADD_SUBDIRECTORY(terra/ats)
ADD_SUBDIRECTORY(terra/atsserver)
ADD_SUBDIRECTORY(feed/TwsSocketClient)
#if(FEED_FS)
ADD_SUBDIRECTORY(feed/fs)
#endif()
#if(FEED_CTP)
ADD_SUBDIRECTORY(feed/cffex)
#endif()
#if(FEED_LTS)
ADD_SUBDIRECTORY(feed/lts)
#endif()
#if(FEED_LTS2)
ADD_SUBDIRECTORY(feed/ltsl2)
#endif()
#if(FEED_XS)
ADD_SUBDIRECTORY(feed/xspeed)
#endif()
#if(FEED_XS2)
ADD_SUBDIRECTORY(feed/xspeed2)
#endif()
#if(FEED_LTSUDP)
ADD_SUBDIRECTORY(feed/ltsudp)
#endif()
#if(FEED_LTSCFFEXUDP)
ADD_SUBDIRECTORY(feed/ltscffexudp)
#endif()
#if(FEED_TDF)
ADD_SUBDIRECTORY(feed/tdf)
#endif()
#if(FEED_SL)
ADD_SUBDIRECTORY(feed/sl)
#endif()
#if(FEED_SL2)
ADD_SUBDIRECTORY(feed/sl2)
#endif()
#if(FEED_ES)
ADD_SUBDIRECTORY(feed/es)
#endif()
#if(FEED_XSL2)
ADD_SUBDIRECTORY(feed/xsl2)
#endif()
#if(FEED_FEMAS2)
ADD_SUBDIRECTORY(feed/femas)
#endif()
#if(FEED_IB)
ADD_SUBDIRECTORY(feed/ib)
#endif()
#if(FEED_ZD)
ADD_SUBDIRECTORY(feed/zd)
#endif()
#if(CON_LTS)
ADD_SUBDIRECTORY(orderpassing/lts)
#endif()
#if(CON_CTP)
ADD_SUBDIRECTORY(orderpassing/cffex)
#endif()
#if(CON_XS)
ADD_SUBDIRECTORY(orderpassing/xspeed)
#endif()
#if(CON_XS2)
ADD_SUBDIRECTORY(orderpassing/xspeed_of)
#endif()
#if(CON_X1)
ADD_SUBDIRECTORY(orderpassing/x1)
#endif()
#if(CON_FS)
ADD_SUBDIRECTORY(orderpassing/fs)
#endif()
#if(CON_SL)
ADD_SUBDIRECTORY(orderpassing/sl)
#endif()
#if(CON_ES)
ADD_SUBDIRECTORY(orderpassing/es)
#endif()
#if(CON_FEMAS)
ADD_SUBDIRECTORY(orderpassing/femas)
#endif()
#if(CON_IB)
ADD_SUBDIRECTORY(orderpassing/ib)
#endif()
#if(CON_ZD)
ADD_SUBDIRECTORY(orderpassing/zd)
#endif()
ADD_SUBDIRECTORY(simpleats)
ADD_SUBDIRECTORY(simpleatsserver)
