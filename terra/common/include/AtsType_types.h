/**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#ifndef AtsType_TYPES_H
#define AtsType_TYPES_H

#include <iosfwd>

#include <thrift/Thrift.h>
#include <thrift/TApplicationException.h>
#include <thrift/protocol/TProtocol.h>
#include <thrift/transport/TTransport.h>

#include <thrift/cxxfunctional.h>


namespace AtsType {

struct OrderWay {
  enum type {
    Undef = 0,
    Buy = 1,
    Sell = 2,
    CoveredBuy = 3,
    CoveredSell = 4,
    Freeze = 5,
    Unfreeze = 6,
    PLEDGE_BOND_IN = 7,
    PLEDGE_BOND_OUT = 8,
    ETFPur = 9,
    ETFRed = 10,
    OFPur = 11,
    OFRed = 12,
    Exercise = 13
  };
};

extern const std::map<int, const char*> _OrderWay_VALUES_TO_NAMES;

struct OrderAction {
  enum type {
    Created = 0,
    Modified = 1,
    Cancelled = 2,
    Undef = 3
  };
};

extern const std::map<int, const char*> _OrderAction_VALUES_TO_NAMES;

struct OrderOpenClose {
  enum type {
    Undef = 0,
    Open = 1,
    Close = 2,
    CloseToday = 3
  };
};

extern const std::map<int, const char*> _OrderOpenClose_VALUES_TO_NAMES;

struct OrderPriceMode {
  enum type {
    Undef = 0,
    Limit = 1,
    Market = 2
  };
};

extern const std::map<int, const char*> _OrderPriceMode_VALUES_TO_NAMES;

struct OrderRestriction {
  enum type {
    Undef = 0,
    None = 1,
    ImmediateAndCancel = 2,
    FillAndKill = 3
  };
};

extern const std::map<int, const char*> _OrderRestriction_VALUES_TO_NAMES;

struct OrderStatus {
  enum type {
    Undef = 0,
    WaitServer = 1,
    WaitMarket = 2,
    Ack = 3,
    Nack = 4,
    Reject = 5,
    Cancel = 6,
    Exec = 7
  };
};

extern const std::map<int, const char*> _OrderStatus_VALUES_TO_NAMES;

struct FeedSourceStatus {
  enum type {
    Up = 0,
    Down = 1
  };
};

extern const std::map<int, const char*> _FeedSourceStatus_VALUES_TO_NAMES;

struct ConnectionStatus {
  enum type {
    Disconnected = 0,
    WaitConnect = 1,
    Connected = 2
  };
};

extern const std::map<int, const char*> _ConnectionStatus_VALUES_TO_NAMES;

struct YesterdayPositionType {
  enum type {
    Local = 0,
    External = 1
  };
};

extern const std::map<int, const char*> _YesterdayPositionType_VALUES_TO_NAMES;

struct YesterdayPriceType {
  enum type {
    Local = 0,
    External = 1
  };
};

extern const std::map<int, const char*> _YesterdayPriceType_VALUES_TO_NAMES;

struct TradingPhase {
  enum type {
    PREOPEN = 0,
    OPEN = 1,
    CLOSE = 2,
    PRECLOSE = 3,
    NO_CANCEL = 4
  };
};

extern const std::map<int, const char*> _TradingPhase_VALUES_TO_NAMES;

struct InstrType {
  enum type {
    Undef = 0,
    Index = 1,
    Stock = 2,
    Option = 3,
    Call = 4,
    Put = 5,
    Future = 6,
    Futurespread = 7,
    ETF = 8,
    Repo = 9,
    Bond = 10,
    Fund = 11,
    Forex = 12,
    Max = 13
  };
};

extern const std::map<int, const char*> _InstrType_VALUES_TO_NAMES;

} // namespace

#endif
